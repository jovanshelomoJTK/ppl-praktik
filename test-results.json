{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":2,"numPassedTests":22,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":23,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1712485551498,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["main"],"duration":2,"failureDetails":[{}],"failureMessages":["Error: Cannot spy on the `stdin` property because it is not a function; object given instead.\n    at ModuleMocker.spyOn (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-mock\\build\\index.js:739:15)\n    at Object.spyOn (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\test\\index.test.js:27:14)\n    at Promise.then.completed (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"main should correctly process input and output","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should correctly process input and output"}],"endTime":1712485552202,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mmain › should correctly process input and output\u001b[39m\u001b[22m\n\n    Cannot spy on the `stdin` property because it is not a function; object given instead.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m         \u001b[36mconst\u001b[39m inputs \u001b[33m=\u001b[39m [\u001b[32m'5'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'3'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'+'\u001b[39m]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m         \u001b[36mconst\u001b[39m output \u001b[33m=\u001b[39m \u001b[32m'8'\u001b[39m\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 27 |\u001b[39m         jest\u001b[33m.\u001b[39mspyOn(process\u001b[33m,\u001b[39m \u001b[32m'stdin'\u001b[39m)\u001b[33m.\u001b[39mmockImplementation(() \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m             \u001b[36mreturn\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m                 next\u001b[33m:\u001b[39m jest\u001b[33m.\u001b[39mfn()\u001b[33m.\u001b[39mmockImplementation(() \u001b[33m=>\u001b[39m \u001b[33mPromise\u001b[39m\u001b[33m.\u001b[39mresolve({ value\u001b[33m:\u001b[39m inputs\u001b[33m.\u001b[39mshift() }))\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m             }\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ModuleMocker.spyOn (\u001b[22m\u001b[2mnode_modules/jest-mock/build/index.js\u001b[2m:739:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.spyOn (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtest/index.test.js\u001b[39m\u001b[0m\u001b[2m:27:14)\u001b[22m\u001b[2m\u001b[22m\n","name":"D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\test\\index.test.js","startTime":1712485551599,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Test calculate function"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Test calculate function calculate 1 + 2 to equal 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculate 1 + 2 to equal 3"},{"ancestorTitles":["Test calculate function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test calculate function calculate 2 - 1 to equal 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculate 2 - 1 to equal 1"},{"ancestorTitles":["Test calculate function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Test calculate function calculate 2 * 3 to equal 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculate 2 * 3 to equal 6"},{"ancestorTitles":["Test calculate function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test calculate function calculate 6 / 2 to equal 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculate 6 / 2 to equal 3"},{"ancestorTitles":["Test calculate function"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Test calculate function calculate 6 / 0 to throw an error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculate 6 / 0 to throw an error"},{"ancestorTitles":["Test calculate function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Test calculate function calculate 123 + \"a\" to throw an error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculate 123 + \"a\" to throw an error"},{"ancestorTitles":["Test calculate function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Test calculate function calculate 32768 + 1 to throw an error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculate 32768 + 1 to throw an error"},{"ancestorTitles":["Test calculate function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Test calculate function calculate 1 + 32768 to throw an error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculate 1 + 32768 to throw an error"},{"ancestorTitles":["Test calculate function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test calculate function calculate 123 \"//\" 456 to throw an error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculate 123 \"//\" 456 to throw an error"},{"ancestorTitles":["Test calculate function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Test calculate function calculate 123 \"a\" 456 to throw an error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"calculate 123 \"a\" 456 to throw an error"}],"endTime":1712485552385,"message":"","name":"D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\test\\calculate.test.js","startTime":1712485552230,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Test add function"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Test add function adds 1 + 2 to equal 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"adds 1 + 2 to equal 3"},{"ancestorTitles":["Test add function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test add function adds 123 + 456 to equal 579","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"adds 123 + 456 to equal 579"},{"ancestorTitles":["Test add function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test add function adds 0 + 0 to equal 0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"adds 0 + 0 to equal 0"},{"ancestorTitles":["Test subtract function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test subtract function subtract 2 - 1 to equal 1","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"subtract 2 - 1 to equal 1"},{"ancestorTitles":["Test subtract function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Test subtract function subtract 456 - 123 to equal 333","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"subtract 456 - 123 to equal 333"},{"ancestorTitles":["Test subtract function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test subtract function subtract 900 - 1000 to equal -100","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"subtract 900 - 1000 to equal -100"},{"ancestorTitles":["Test multiply function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test multiply function multiply 2 * 3 to equal 6","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"multiply 2 * 3 to equal 6"},{"ancestorTitles":["Test multiply function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Test multiply function multiply 123 * 456 to equal 56088","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"multiply 123 * 456 to equal 56088"},{"ancestorTitles":["Test multiply function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test multiply function multiply 0 * 0 to equal 0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"multiply 0 * 0 to equal 0"},{"ancestorTitles":["Test divide function"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Test divide function divide 6 / 2 to equal 3","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"divide 6 / 2 to equal 3"},{"ancestorTitles":["Test divide function"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Test divide function divide 0 / 123 to equal 0","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"divide 0 / 123 to equal 0"},{"ancestorTitles":["Test divide function"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Test divide function divide 123 / 0 to throw an error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"divide 123 / 0 to throw an error"}],"endTime":1712485552579,"message":"","name":"D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\test\\operations.test.js","startTime":1712485552414,"status":"passed","summary":""}],"wasInterrupted":false,"coverageMap":{"D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\src\\operations.js":{"path":"D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\src\\operations.js","statementMap":{"0":{"start":{"line":2,"column":4},"end":{"line":2,"column":16}},"1":{"start":{"line":6,"column":4},"end":{"line":6,"column":16}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":16}},"3":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":55}},"5":{"start":{"line":17,"column":4},"end":{"line":17,"column":16}}},"fnMap":{"0":{"name":"add","decl":{"start":{"line":1,"column":16},"end":{"line":1,"column":19}},"loc":{"start":{"line":1,"column":26},"end":{"line":3,"column":1}},"line":1},"1":{"name":"subtract","decl":{"start":{"line":5,"column":16},"end":{"line":5,"column":24}},"loc":{"start":{"line":5,"column":31},"end":{"line":7,"column":1}},"line":5},"2":{"name":"multiply","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":24}},"loc":{"start":{"line":9,"column":31},"end":{"line":11,"column":1}},"line":9},"3":{"name":"divide","decl":{"start":{"line":13,"column":16},"end":{"line":13,"column":22}},"loc":{"start":{"line":13,"column":29},"end":{"line":18,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{},"end":{}}],"line":14}},"s":{"0":4,"1":4,"2":4,"3":5,"4":2,"5":3},"f":{"0":4,"1":4,"2":4,"3":5},"b":{"0":[2,3]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"54f35a89f35c571a0f955e5b6d4ffe01a845f684"},"D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\src\\calculate.js":{"path":"D:\\documents\\polban\\sem 6\\ppl praktik\\W8\\src\\calculate.js","statementMap":{"0":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"1":{"start":{"line":6,"column":8},"end":{"line":6,"column":58}},"2":{"start":{"line":8,"column":4},"end":{"line":8,"column":20}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":20}},"4":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":50}},"6":{"start":{"line":14,"column":4},"end":{"line":25,"column":5}},"7":{"start":{"line":16,"column":12},"end":{"line":16,"column":29}},"8":{"start":{"line":18,"column":12},"end":{"line":18,"column":34}},"9":{"start":{"line":20,"column":12},"end":{"line":20,"column":34}},"10":{"start":{"line":22,"column":12},"end":{"line":22,"column":32}},"11":{"start":{"line":24,"column":12},"end":{"line":24,"column":66}}},"fnMap":{"0":{"name":"calculate","decl":{"start":{"line":4,"column":16},"end":{"line":4,"column":25}},"loc":{"start":{"line":4,"column":42},"end":{"line":26,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{},"end":{}}],"line":5},"1":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":28}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":16}},{"start":{"line":5,"column":20},"end":{"line":5,"column":28}}],"line":5},"2":{"loc":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},{"start":{},"end":{}}],"line":10},"3":{"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":58}},"type":"binary-expr","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":18}},{"start":{"line":10,"column":22},"end":{"line":10,"column":31}},{"start":{"line":10,"column":35},"end":{"line":10,"column":45}},{"start":{"line":10,"column":49},"end":{"line":10,"column":58}}],"line":10},"4":{"loc":{"start":{"line":14,"column":4},"end":{"line":25,"column":5}},"type":"switch","locations":[{"start":{"line":15,"column":8},"end":{"line":16,"column":29}},{"start":{"line":17,"column":8},"end":{"line":18,"column":34}},{"start":{"line":19,"column":8},"end":{"line":20,"column":34}},{"start":{"line":21,"column":8},"end":{"line":22,"column":32}},{"start":{"line":23,"column":8},"end":{"line":24,"column":66}}],"line":14}},"s":{"0":10,"1":1,"2":9,"3":9,"4":9,"5":2,"6":7,"7":1,"8":1,"9":1,"10":2,"11":2},"f":{"0":10},"b":{"0":[1,9],"1":[10,10],"2":[2,7],"3":[9,9,8,8],"4":[1,1,1,2,2]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fc470d1665f76b06c0ae12d9ba547b60a08c5f02"}}}
